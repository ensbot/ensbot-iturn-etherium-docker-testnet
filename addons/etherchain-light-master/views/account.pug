extends layout

block content
  if account.isContract
    h3 Contract #{account.address}
  else
    h3 Account #{account.address}
  table.table
    tr
      td Balance:
      td #{ethformatter(account.balance)}
    if account.name
      tr
        td Name:
        td #{account.name}

  div
    ul.nav.nav-tabs(role='tablist')
      li.active(role='presentation')
        a(href='#transactions', aria-controls='transactions', role='tab', data-toggle='tab') Transactions
      if account.isContract
        li(role='presentation')
          a(href='#code', aria-controls='code', role='tab', data-toggle='tab') Code
      if account.source
        li(role='presentation')
          a(href='#source', aria-controls='source', role='tab', data-toggle='tab') Source
        li(role='presentation')
          a(href='#contractState', aria-controls='source', role='tab', data-toggle='tab') Contract State
    .tab-content
      #transactions.tab-pane.active(role='tabpanel')
        h3 Last Transactions
        table.table
          thead
            tr
              th Hash
              th Block
              th Age
              th
              th From
              th
              th To
              th Amount
          tbody
            for txn in account.txns
              tr
                td
                  a(href="/tx/" + txn.hash)  #{txn.hash.substr(0, 10)}...
                td
                  a(href="/block/" + txn.blockNumber) #{txn.blockNumber}
                td
                  | #{moment.unix(txn.timestamp).fromNow()}
                td.capitalize
                  if txn.error
                    span(style="color: red", data-toggle="tooltip", data-placement="left", title=txn.error).glyphicon.glyphicon-warning-sign
                  |  #{txn.type}
                td
                  a(href="/account/" + txn.from) #{nameformatter.format(txn.from)}
                td
                  if txn.from === account.address
                    span.glyphicon.glyphicon-export(style="color: red;")
                  else
                    span.glyphicon.glyphicon-import(style="color: green;")
                td
                  if(txn.to)
                    a(href="/account/" + txn.to) #{nameformatter.format(txn.to)}
                  else
                    if( txn.contractAddress === account.address)
                      | New Contract
                    else
                      a(href="/account/" + txn.contractAddress) New Contract
                td #{ethformatter(txn.value)}

      if account.isContract
        #code.tab-pane(role='tabpanel')
          h3 Code
          if !account.source
            a(href="/contract/verify") Upload source
          pre #{account.code}
      if account.source
        #source.tab-pane(role='tabpanel')
          h4 Source
          pre #{account.source.source}
          h4 ABI
          pre #{account.source.abi}
          h4 Constructor
          pre #{account.source.constructorArgs}
        #contractState.tab-pane(role='tabpanel')
          h4 Current contract state
          table.table
            thead
              tr
                th Function
                th Result
            tbody
              for item in account.contractState
                tr
                  td #{item.name}
                  td #{item.result}
